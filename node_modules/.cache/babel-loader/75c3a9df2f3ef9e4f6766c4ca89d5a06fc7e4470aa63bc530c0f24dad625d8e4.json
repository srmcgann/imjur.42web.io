{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport Link from './Link';\nexport default {\n  name: 'Main',\n  props: ['state'],\n  components: {\n    Link\n  },\n  data() {\n    return {\n      preload: [],\n      rejects: [],\n      dragover: false,\n      showUploadProgress: false,\n      filesUploading: []\n    };\n  },\n  methods: {\n    shortUploadName(str) {\n      let ret = str;\n      if (ret.length > 43) ret = ret.substring(0, 30) + '...' + ret.substring(ret.length - 10);\n      return ret;\n    },\n    dragLeaveHandler() {\n      this.dragover = false;\n    },\n    dragOverHandler() {\n      this.dragover = true;\n    },\n    processUpload(files) {\n      if (!files.length) return;\n      this.showUploadProgress = true;\n      this.$refs.main.style.zIndex = 100000;\n      this.filesUploading = Array(files.length).fill().map(v => {\n        return {};\n      });\n      console.log(files);\n      Array.from(files).forEach((v, i) => {\n        v.completed = false;\n        this.filesUploading[i].perc = 0;\n        this.filesUploading[i].uploadName = v.name;\n      });\n      let ct = 0;\n      files.map((file, i) => {\n        console.log(`file ${i}: `, file);\n        if ((file.type == 'image/gif' || file.type == 'image/jiff' || file.type == 'image/jpeg' || file.type == 'image/jpg' || file.type == 'image/png' || file.type == 'image/webp' || file.type == 'video/mp4' || file.type == 'video/webm' || file.type == 'video/mkv' || file.type == 'audio/mp3' || file.type == 'audio/wav' || file.type == 'audio/mpeg') && file.size < 25000000) {\n          ct++;\n        } else {\n          this.rejects = [...this.rejects, file];\n        }\n      });\n      let rej = '<div style=\"min-width:90vw; min-height: 50vh; position: absolute; left: 50%; top: 50%; transform: translate(-50%, -50%);background: #4008; color: #f88; padding-top: 100px;\">';\n      this.rejects.map(reject => {\n        let sz = (reject.size / 1024 ** 2 | 0).toLocaleString('en-us') + ' MB<br>';\n        rej += `oversized/rejected: size: ${sz} \"${reject.name}\" <br><br>`;\n      });\n      if (this.rejects.length) {\n        this.state.modalQueue = [...this.state.modalQueue, rej + '</div>'];\n        this.state.closeModal();\n      } else if (ct) {\n        Array.from(files).forEach((v, i) => {\n          let batchMetaData = {\n            loggedIn: this.state.loggedIn,\n            userID: this.state.loggedinUserID,\n            passhash: this.state.passhash,\n            description: ''\n          };\n          console.log('batchMetaData', batchMetaData);\n          let data = new FormData();\n          data.append(`uploads_${0}`, v);\n          //data.append('file', v)\n          data.append('batchMetaData', JSON.stringify(batchMetaData));\n          let request = new XMLHttpRequest();\n          request.open('POST', 'upload.php');\n          request.upload.addEventListener('progress', e => {\n            let perc = e.loaded / e.total * 100;\n            this.filesUploading[i].uploadName = v.name;\n            this.filesUploading[i].perc = perc;\n          });\n          request.addEventListener('load', e => {\n            v.completed = true;\n            let finished = true;\n            Array.from(files).forEach(q => {\n              if (!q.completed) finished = false;\n            });\n            if (finished) {\n              this.showUploadProgress = false;\n              this.$refs.main.style.zIndex = 0;\n              this.state.modalContent = '';\n              this.state.closeModal();\n              if (this.state.loggedIn) {\n                console.log('logged in tho?');\n                this.state.jumpToPage(0);\n                this.state.links = [];\n                this.state.fetchUserLinks(this.state.loggedinUserID);\n              } else {\n                this.state.modalContent = '<div style=\"box-sizing: border-box;min-width:90vw; min-height: 50vh; position: absolute; left: 50%; top: 50%; transform: translate(-50%, -50%);background: #0846; color: #8f8; padding: 100px; text-align: left;\">' + `excellent choice, uploading here...<br><br>you have not logged in though, which means your links will be lost soon.<br><br>If you register, nothing is needed except a name of your choosing and a password you will remember, then these uploads will be auto-saved to your new profile...<br><br>just don't close the page or refresh before you login or register!<br><br><br>thanks for using imjur!` + '</div>';\n                this.state.showModal = true;\n                this.state.showRegister = true;\n                this.state.showLoginPrompt = true;\n              }\n            }\n            if (e.currentTarget.responseText[0] != '<') {\n              let data = JSON.parse(e.currentTarget.responseText);\n              if (data[0]) {\n                data[1].map((v, j) => {\n                  //addLink(size, type, ct, href, selected, userID, slug, originalSlug, origin, serverTZO, views, ids){\n                  this.addLink(data[2][j], data[3][j], i, v, false, this.state.loggedinUserID, data[6][j], data[7][j], data[8][j], data[9], data[10][j], data[11][j], data[12][j]);\n                });\n              } else {\n                this.state.modalContent = '<div style=\"min-width:90vw; min-height: 50vh; position: absolute; left: 50%; top: 50%; transform: translate(-50%, -50%);background: #8002; color: #f88; padding-top: 100px;\">' + data[5] + '</div>';\n              }\n            }\n          });\n          request.send(data);\n        });\n      } else {\n        this.$refs.main.style.zIndex = 0;\n        alert('no files were uploaded. hmmmm. mebbe too big tho');\n        this.state.closeModal();\n        this.showUploadProgress = false;\n      }\n    },\n    dropFiles(e) {\n      /*let files = document.createElement('input')\n      files.type = 'file'\n      files.name = 'uploads[]'\n      files.multiple = true\n      files.accept = 'image/gif, image/jiff, image/jpeg, image/jpg, image/png, image/webp, video/mp4, video/webm, video/mkv, audio/mp3, audio/wav, audio/mpeg'\n      files.files = []*/\n\n      let files = [];\n      if (e.dataTransfer.items) {\n        [...e.dataTransfer.items].forEach((item, i) => {\n          if (item.kind === \"file\") {\n            const file = item.getAsFile();\n            files = [...files, file];\n          }\n        });\n      } else {\n        files = Array.from(e.dataTransfer.files);\n      }\n      if (files.length) this.processUpload(files);\n    },\n    addLink(size, type, ct, href, selected, userID, slug, originalSlug, origin, serverTZO, views, id, date) {\n      let obj = {\n        size,\n        type,\n        ct,\n        href,\n        slug,\n        origin,\n        selected,\n        userID,\n        id,\n        originalSlug,\n        linkType: 'link',\n        serverTZO,\n        views,\n        date\n      };\n      this.state.links.push(obj);\n    },\n    loadFiles() {\n      //if(this.state.links.length) return\n      // uncomment above to disable subsequent\n      // click->open-file-dialog, after 1 successful upload\n\n      let files = document.createElement('input');\n      files.type = 'file';\n      files.multiple = true;\n      files.accept = 'image/gif, image/jiff, image/jpeg, image/jpg, image/png, image/webp, video/mp4, video/webm, video/mkv, audio/mp3, audio/wav, audio/mpeg';\n      files.onchange = () => this.processUpload(Array.from(files.files));\n      files.click();\n    }\n  },\n  mounted() {\n    this.$refs.main.focus();\n    this.state.loadFiles = this.loadFiles;\n    this.preload = [...this.preload, [document.createElement('video'), 'loading.mp4']];\n    this.preload.map(v => {\n      v[0].src = this.state.URLbase + '/' + v[1];\n    });\n  }\n};","map":{"version":3,"names":["Link","name","props","components","data","preload","rejects","dragover","showUploadProgress","filesUploading","methods","shortUploadName","str","ret","length","substring","dragLeaveHandler","dragOverHandler","processUpload","files","$refs","main","style","zIndex","Array","fill","map","v","console","log","from","forEach","i","completed","perc","uploadName","ct","file","type","size","rej","reject","sz","toLocaleString","state","modalQueue","closeModal","batchMetaData","loggedIn","userID","loggedinUserID","passhash","description","FormData","append","JSON","stringify","request","XMLHttpRequest","open","upload","addEventListener","e","loaded","total","finished","q","modalContent","jumpToPage","links","fetchUserLinks","showModal","showRegister","showLoginPrompt","currentTarget","responseText","parse","j","addLink","send","alert","dropFiles","dataTransfer","items","item","kind","getAsFile","href","selected","slug","originalSlug","origin","serverTZO","views","id","date","obj","linkType","push","loadFiles","document","createElement","multiple","accept","onchange","click","mounted","focus","src","URLbase"],"sources":["/home/whitehotrobot/imjur.42web.io/src/components/Main.vue"],"sourcesContent":["<template>\n  <div class=\"main\" ref=\"main\" tabindex=\"0\">\n    <div v-if=\"showUploadProgress\" class=\"uploadProgressContainer\">\n      <br>uploading {{filesUploading.length}} file{{filesUploading.length > 1 ? 's':''}}...\n      <div class=\"progressBar\" v-for=\"file in filesUploading\">\n        <div class=\"progressBarInnerOutline\">\n          <div class=\"progressBarInner\" :style=\"'width:calc(' + (file.perc) + '%)'\"></div>\n        </div>\n        <span class=\"progressText\" v-html=\"(Math.round(file.perc*100)/100) + '%' + ' - ' + shortUploadName(file.uploadName)\"></span>\n      </div>\n    </div>\n    <div\n      v-if=\"state.showUploadModal\"\n      class=\"uploadModal\"\n      :class=\"{'dragover': dragover}\"\n      @drop.prevent=\"processDrop\"\n      @dragover.prevent=\"dragOverHandler\"\n      @dragleave.prevent=\"dragLeaveHandler\"\n    >\n      <div class=\"uploadModalInner\">\n        <span style=\"font-size: 2em;color: #888\">upload tracks</span><br><br>\n        <br>valid formats<br><br>\n        MP3, OGG, WAV<br><br><br>\n        <span style=\"font-size: 1.4em;color: #ff0\">drop file(s) here...</span><br>\n        <br>or<br><br>\n        <button @click=\"uploadManual()\" style=\"background: #0f0;max-width: 400px;\">manually select one from your device</button><br><br>\n        <button @click=\"state.showUploadModal = false\" style=\"background: #400;color: #fee;font-weight: 400;\">cancel</button>\n      </div>\n    </div>\n    <div\n      id=\"dropTarget\"\n      class=\"dropTarget\"\n      @dragover.prevent\n      @drop.prevent=\"dropFiles($event)\"\n      @click=\"\"\n      ref=\"dropTarget\"\n    >\n      <div\n        ref=\"dropTargetCaption\"\n        id=\"dropTargetCaption\"\n        v-if=\"!(state.userLinks.length || state.links.length || state.loadingAssets)\"\n        style=\"cursor: pointer;\"\n        @click=\"this.loadFiles()\"\n      >\n        throw sum filez [click/drop]<br><br>\n        accepted : gif<br>\n        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;web[p/m]<br>\n        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;png<br>\n        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;jp[e]g<br>\n        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mp4<br>\n        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mp3<br><br>\n        max size : 25MB<br>\n        <span style=\"font-size: .7em;\">(per file)</span><br><br>\n        max files: 15<br>\n        <span style=\"font-size: .7em;\">(at a time)</span><br><br><br>\n        <div style=\"font-size: .6em;\">\n        WARRANTY: none<br><br>\n        this website is a work-in-progress.<br>\n        your files will likely be deleted</div>\n      </div>\n      <div v-if=\"state.links.length || state.userLinks.length\" class=\"links\">\n        <Link\n          :state=\"state\"\n          v-for=\"link in state.links\"\n          :link=\"link\"\n          :linkMode=\"'link'\"\n          :key=\"link.id\"\n          v-if=\"state.links.length\"\n        />\n        <Link\n          :state=\"state\"\n          v-for=\"link in state.userLinks\"\n          :link=\"link\"\n          :linkMode=\"'userLink'\"\n          :key=\"link.id\"\n          v-if=\"state.userLinks.length\"\n        />\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport Link from './Link'\n\nexport default {\n  name: 'Main',\n  props: [ 'state' ],\n  components: {\n    Link\n  },\n  data(){\n    return {\n      preload: [],\n      rejects: [],\n      dragover: false,\n      showUploadProgress: false,\n      filesUploading: []\n    }\n  },\n  methods: {\n    shortUploadName(str){\n      let ret = str\n      if(ret.length > 43) ret = ret.substring(0, 30) + '...' + ret.substring(ret.length-10)\n      return ret\n    },\n    dragLeaveHandler(){\n      this.dragover = false\n    },\n    dragOverHandler(){\n      this.dragover = true\n    },\n    processUpload(files){\n    \n      if(!files.length) return\n      this.showUploadProgress = true\n      this.$refs.main.style.zIndex = 100000\n      this.filesUploading = Array(files.length).fill().map(v=>{return {}})\n      console.log(files)\n      Array.from(files).forEach((v, i)=>{\n        v.completed = false\n        this.filesUploading[i].perc = 0\n        this.filesUploading[i].uploadName = v.name\n      })\n        \n      let ct = 0\n      files.map((file, i) => {\n        console.log(`file ${i}: `, file)\n        if((\n          file.type == 'image/gif' ||\n          file.type == 'image/jiff' ||\n          file.type == 'image/jpeg' ||\n          file.type == 'image/jpg' ||\n          file.type == 'image/png' ||\n          file.type == 'image/webp' ||\n          file.type == 'video/mp4' ||\n          file.type == 'video/webm' ||\n          file.type == 'video/mkv' ||\n          file.type == 'audio/mp3' ||\n          file.type == 'audio/wav' ||\n          file.type == 'audio/mpeg') &&\n          file.size < 25000000){\n          ct++\n        } else {\n          this.rejects = [...this.rejects, file]\n        }\n      })\n      \n      let rej = '<div style=\"min-width:90vw; min-height: 50vh; position: absolute; left: 50%; top: 50%; transform: translate(-50%, -50%);background: #4008; color: #f88; padding-top: 100px;\">'\n      this.rejects.map(reject=>{\n        let sz = (reject.size/(1024**2)|0).toLocaleString('en-us') + ' MB<br>'\n        rej += `oversized/rejected: size: ${sz} \"${reject.name}\" <br><br>`\n      })\n      if(this.rejects.length) {\n        this.state.modalQueue = [...this.state.modalQueue, rej + '</div>']\n        this.state.closeModal()\n      } else if(ct) {\n        Array.from(files).forEach((v, i) => {\n          let batchMetaData = {\n            loggedIn: this.state.loggedIn,\n            userID: this.state.loggedinUserID,\n            passhash: this.state.passhash,\n            description: '',\n          }\n          console.log('batchMetaData', batchMetaData)\n          let data = new FormData()\n          data.append(`uploads_${0}`, v)\n          //data.append('file', v)\n          data.append('batchMetaData', JSON.stringify(batchMetaData))\n          let request = new XMLHttpRequest()\n          request.open('POST', 'upload.php')\n          request.upload.addEventListener('progress', e => {\n            let perc = (e.loaded / e.total)*100\n            this.filesUploading[i].uploadName = v.name\n            this.filesUploading[i].perc = perc\n          })\n          request.addEventListener('load', e=> {\n            v.completed = true\n            let finished = true\n            Array.from(files).forEach(q=>{\n              if(!q.completed) finished = false\n            })\n            if(finished) {\n              this.showUploadProgress = false\n              this.$refs.main.style.zIndex = 0\n              this.state.modalContent = ''\n              this.state.closeModal()\n              if(this.state.loggedIn){\n                console.log('logged in tho?')\n                this.state.jumpToPage(0)\n                this.state.links = []\n                this.state.fetchUserLinks(this.state.loggedinUserID)\n              }else{\n                this.state.modalContent = '<div style=\"box-sizing: border-box;min-width:90vw; min-height: 50vh; position: absolute; left: 50%; top: 50%; transform: translate(-50%, -50%);background: #0846; color: #8f8; padding: 100px; text-align: left;\">' + `excellent choice, uploading here...<br><br>you have not logged in though, which means your links will be lost soon.<br><br>If you register, nothing is needed except a name of your choosing and a password you will remember, then these uploads will be auto-saved to your new profile...<br><br>just don't close the page or refresh before you login or register!<br><br><br>thanks for using imjur!` + '</div>'\n                this.state.showModal = true\n                this.state.showRegister = true\n                this.state.showLoginPrompt = true\n              }\n            }\n            if(e.currentTarget.responseText[0] != '<'){\n              let data = JSON.parse(e.currentTarget.responseText)\n              if(data[0]){\n                data[1].map((v, j)=>{\n                  //addLink(size, type, ct, href, selected, userID, slug, originalSlug, origin, serverTZO, views, ids){\n                  this.addLink(data[2][j], data[3][j], i, v, false, this.state.loggedinUserID, data[6][j], data[7][j], data[8][j], data[9], data[10][j], data[11][j], data[12][j])\n                })\n              }else{\n                this.state.modalContent = '<div style=\"min-width:90vw; min-height: 50vh; position: absolute; left: 50%; top: 50%; transform: translate(-50%, -50%);background: #8002; color: #f88; padding-top: 100px;\">' + data[5] + '</div>'\n              }\n            }\n          })\n          request.send(data)\n        })\n      }else{\n        this.$refs.main.style.zIndex = 0\n        alert('no files were uploaded. hmmmm. mebbe too big tho')\n        this.state.closeModal()\n        this.showUploadProgress = false\n      }\n    },\n    dropFiles(e){\n\n      /*let files = document.createElement('input')\n      files.type = 'file'\n      files.name = 'uploads[]'\n      files.multiple = true\n      files.accept = 'image/gif, image/jiff, image/jpeg, image/jpg, image/png, image/webp, video/mp4, video/webm, video/mkv, audio/mp3, audio/wav, audio/mpeg'\n      files.files = []*/\n      \n      let files = []\n      if(e.dataTransfer.items){\n        [...e.dataTransfer.items].forEach((item, i) => {\n          if (item.kind === \"file\") {\n            const file = item.getAsFile()\n            files = [...files, file]\n          }\n        })\n      }else{\n        files = Array.from(e.dataTransfer.files)\n      }\n      if(files.length) this.processUpload(files)\n    },\n    addLink(size, type, ct, href, selected, userID, slug, originalSlug, origin, serverTZO, views, id, date){\n    \n      let obj = {\n        size,\n        type,\n        ct,\n        href,\n        slug,\n        origin,\n        selected,\n        userID,\n        id,\n        originalSlug,\n        linkType: 'link',\n        serverTZO,\n        views,\n        date\n      }\n      this.state.links.push(obj)\n    },\n    loadFiles(){\n      //if(this.state.links.length) return\n      // uncomment above to disable subsequent\n      // click->open-file-dialog, after 1 successful upload\n      \n      let files = document.createElement('input')\n      files.type = 'file'\n      files.multiple = true\n      files.accept = 'image/gif, image/jiff, image/jpeg, image/jpg, image/png, image/webp, video/mp4, video/webm, video/mkv, audio/mp3, audio/wav, audio/mpeg'\n      files.onchange = () => this.processUpload(Array.from(files.files))\n      files.click()\n    }\n  },\n  mounted(){\n    this.$refs.main.focus()\n    this.state.loadFiles = this.loadFiles\n    this.preload = [ ...this.preload,\n      [document.createElement('video'), 'loading.mp4'],\n    ]\n    this.preload.map(v => {\n      v[0].src = this.state.URLbase + '/' + v[1]\n    })\n  }\n}\n</script>\n\n<style scoped>\n  .main{\n    background-color: #000011ee;\n    font-size: 20px;\n    overflow-y: scroll;\n    overflow-x: hidden;\n    height: 100%;\n    padding: 0px;\n    box-sizing: border-box;\n    text-align: center;\n    position: absolute;\n    padding-top: 100px;\n    z-index: 0;\n    padding-bottom: 200px;\n    width: 100vw;\n  }\n  /*.dropTarget:hover{\n    background-color: #0648;\n    cursor: pointer;\n  }*/\n  .dropTarget{\n    color: #0f8;\n    display: inline-block;\n    text-align: left;\n    background-repeat: no-repeat;\n    background-position: center center;\n    background-size: 100% 100%;\n    border-radius: 10px;\n    /*background-image: url(../assets/loading.gif);*/\n    /*border: 1px solid #4088;*/\n    /*background-color: #0468;*/\n    width: 100%;\n    min-height: calc(100% - 10px);\n    box-sizing: border-box;\n  }\n  .links{\n    margin: 0;\n    box-sizing: border-box;\n    text-align: center;\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: space-evenly;\n  }\n  @keyframes colorCycle{\n    0% {\n      background-color:  #ff000022;\n      box-shadow: 0 0 150px 150px #ff000022;\n    }\n    5% {\n      background-color: #ff4c0022;\n      box-shadow: 0 0 150px 150px #ff4c0022;\n    }\n    10% {\n      background-color: #ff990022;\n      box-shadow: 0 0 150px 150px #ff990022;\n    }\n    15% {\n      background-color: #ffe50022;\n      box-shadow: 0 0 150px 150px #ffe50022;\n    }\n    20% {\n      background-color: #ccff0022;\n      box-shadow: 0 0 150px 150px #ccff0022;\n    }\n    25% {\n      background-color: #7fff0022;\n      box-shadow: 0 0 150px 150px #7fff0022;\n    }\n    30% {\n      background-color: #32ff0022;\n      box-shadow: 0 0 150px 150px #32ff0022;\n    }\n    35% {\n      background-color: #00ff1922;\n      box-shadow: 0 0 150px 150px #00ff1922;\n    }\n    40% {\n      background-color: #00ff6522;\n      box-shadow: 0 0 150px 150px #00ff6522;\n    }\n    45% {\n      background-color: #00ffb222;\n      box-shadow: 0 0 150px 150px #00ffb222;\n    }\n    50% {\n      background-color: #00ffff22;\n      box-shadow: 0 0 150px 150px #00ffff22;\n    }\n    55% {\n      background-color: #00b2ff22;\n      box-shadow: 0 0 150px 150px #00b2ff22;\n    }\n    60% {\n      background-color: #0065ff22;\n      box-shadow: 0 0 150px 150px #0065ff22;\n    }\n    65% {\n      background-color: #0019ff22;\n      box-shadow: 0 0 150px 150px #0019ff22;\n    }\n    70% {\n      background-color: #3300ff22;\n      box-shadow: 0 0 150px 150px #3300ff22;\n    }\n    75% {\n      background-color: #7f00ff22;\n      box-shadow: 0 0 150px 150px #7f00ff22;\n    }\n    80% {\n      background-color: #cb00ff22;\n      box-shadow: 0 0 150px 150px #cb00ff22;\n    }\n    85% {\n      background-color: #ff00e522;\n      box-shadow: 0 0 150px 150px #ff00e522;\n    }\n    90% {\n      background-color: #ff009822;\n      box-shadow: 0 0 150px 150px #ff009822;\n    }\n    95% {\n      background-color: #ff004c22;\n      box-shadow: 0 0 150px 150px #ff004c22;\n    }\n    100% {\n      background-color: #ff000022;\n      box-shadow: 0 0 150px 150px #ff000022;\n    }\n  }\n  #dropTargetCaption{\n    display: inline-block;\n    width: 340px;\n    position: fixed;\n    left: 50%;\n    top: calc(50% - 24px);\n    transform: translate(-50%, -50%);\n    padding: 38px;\n    border-radius: 32%;\n    height: 320px;\n    padding-top: 0;\n    padding-right: 28px;\n    background-color: #103c;\n    box-shadow: 0 0 150px 150px #103c;\n    /*animation: colorCycle 5s infinite linear;*/\n  }\n  .uploadModal{\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100vw;\n    height: 100vh;\n    background: #001d;\n    z-index: 100000;\n    line-height: 1.05em;\n  }\n  .uploadProgressContainer{\n    position: fixed;\n    top: 0;\n    left: 0;\n    overflow: auto;\n    width: 100vw;\n    height: 100vh;\n    background: #102d;\n    z-index: 100000;\n    line-height: 1.05em;\n    color: #f00;\n    font-size: 24px;\n  }\n  .uploadModalInner{\n    position: absolute;\n    top: calc(50% - 60px);\n    left: 50%;\n    width: 400px;\n    height: 280px;\n    background: #103b;\n    z-index: 100000;\n    box-shadow: 0px 0px 100px 100px #103b;\n    transform: translate(-50%, -50%);\n    border-radius: 10px;\n  }\n  .dragover{\n    background: #0246;\n  }\n  .progressBar{\n    width: 80%;\n    height: 16px;\n    margin-left: auto;\n    margin-right: auto;\n    margin-top: 10px;\n  }\n  .progressBarInner{\n    background: #40f8;\n    height: 100%;\n  }\n  .progressBarInnerOutline{\n    border: 1px solid #84f3;\n    height: 100%;\n  }\n  .progressText{\n    position: relative;\n    font-size: 17px;\n    color: #dbf;\n    right: 50%;\n    transform: translate(50%, -85%);\n    text-shadow: 1px 1px 2px #000;\n    display: inline-block;\n  }\n</style>\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}