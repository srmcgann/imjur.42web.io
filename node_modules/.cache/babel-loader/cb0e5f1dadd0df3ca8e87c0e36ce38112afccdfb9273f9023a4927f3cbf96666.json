{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"div\", {\n  id: \"copyConfirmation\"\n}, [/*#__PURE__*/_createElementVNode(\"div\", {\n  id: \"innerCopied\"\n}, \"COPIED!\")], -1);\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Header = _resolveComponent(\"Header\");\n  const _component_Toolbar = _resolveComponent(\"Toolbar\");\n  const _component_Main = _resolveComponent(\"Main\");\n  const _component_Footer = _resolveComponent(\"Footer\");\n  const _component_UserSettings = _resolveComponent(\"UserSettings\");\n  const _component_LoginPrompt = _resolveComponent(\"LoginPrompt\");\n  const _component_Modal = _resolveComponent(\"Modal\");\n  const _component_Preview = _resolveComponent(\"Preview\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_createVNode(_component_Header, {\n    state: $data.state\n  }, null, 8, [\"state\"]), _createVNode(_component_Toolbar, {\n    state: $data.state\n  }, null, 8, [\"state\"]), _createVNode(_component_Main, {\n    state: $data.state\n  }, null, 8, [\"state\"]), _createVNode(_component_Footer, {\n    state: $data.state\n  }, null, 8, [\"state\"]), $data.state.userSettingsVisible ? (_openBlock(), _createBlock(_component_UserSettings, {\n    key: 0,\n    state: $data.state\n  }, null, 8, [\"state\"])) : _createCommentVNode(\"\", true), $data.state.showLoginPrompt ? (_openBlock(), _createBlock(_component_LoginPrompt, {\n    key: 1,\n    state: $data.state\n  }, null, 8, [\"state\"])) : _createCommentVNode(\"\", true), $data.state.showModal ? (_openBlock(), _createBlock(_component_Modal, {\n    key: 2,\n    state: $data.state,\n    content: $data.state.modalContent\n  }, null, 8, [\"state\", \"content\"])) : _createCommentVNode(\"\", true), $data.state.showPreview ? (_openBlock(), _createBlock(_component_Preview, {\n    key: 3,\n    state: $data.state,\n    link: $data.state.previewLink\n  }, null, 8, [\"state\", \"link\"])) : _createCommentVNode(\"\", true), _hoisted_1]);\n}","map":{"version":3,"names":["_createElementVNode","id","_createElementBlock","_createVNode","_component_Header","state","$data","_component_Toolbar","_component_Main","_component_Footer","userSettingsVisible","_createBlock","_component_UserSettings","key","_createCommentVNode","showLoginPrompt","_component_LoginPrompt","showModal","_component_Modal","content","modalContent","showPreview","_component_Preview","link","previewLink","_hoisted_1"],"sources":["/home/whitehotrobot/imjur.42web.io/src/App.vue"],"sourcesContent":["<template>\n  <div>\n    <Header       :state=\"state\" />\n    <Toolbar      :state=\"state\" />\n    <Main         :state=\"state\" />\n    <Footer       :state=\"state\" />\n    <UserSettings :state=\"state\" v-if=\"state.userSettingsVisible\" />\n    <LoginPrompt  :state=\"state\" v-if=\"state.showLoginPrompt\"/>\n    <Modal\n      :state=\"state\"\n      v-if=\"state.showModal\"\n      :content=\"state.modalContent\"\n    />\n    <Preview\n      :state=\"state\"\n      v-if=\"state.showPreview\"\n      :link=\"state.previewLink\"\n    />\n    <div id=\"copyConfirmation\"><div id=\"innerCopied\">COPIED!</div></div>\n  </div>\n</template>\n\n<script>\nimport Main from './components/Main'\nimport Modal from './components/Modal'\nimport Header from './components/Header'\nimport Footer from './components/Footer'\nimport Preview from './components/Preview'\nimport Toolbar from './components/Toolbar'\nimport LoginPrompt from './components/LoginPrompt'\nimport UserSettings from './components/UserSettings'\n\nexport default {\n  name: 'App',\n  components: {\n    Header,\n    Toolbar,\n    Main,\n    Footer,\n    UserSettings,\n    Modal,\n    Preview,\n    LoginPrompt,\n  },\n  data(){\n    return {\n      state: {\n        footerMsg: '<b><span style=\"transform: scaleX(4.1);display: inline-block; margin-left: 86px; \">IMJUR</span></b><br>A FREE DIGITAL ASSET<br><span style=\"transform: scaleX(.87);display: inline-block; margin-left: -18px;\">HOSTING SERVICE - Â©'+(new Date()).getFullYear() + `</span><br><a href=\"mailto:whitehotrobot@gmail.com\"><span style=\"transform: scaleX(.87);display: inline-block; margin-left: -18px;\">whitehotrobot@gmail.com</span></a>`,\n        links: [],\n        userLinks: [],\n        uploadInProgress: false,\n        showModal: false,\n        fetchUserLinks: null,\n        setCookie: null,\n        mode: null,\n        deleteSelected: null,\n        getAvatar: null,\n        showPreview: false,\n        rootDomain: location.hostname,\n        modalContent: '',\n        modalQueue: [],\n        previewLink: null,\n        passhash: '',\n        loggedinUserID: null,\n        closeModal: null,\n        closePreview: null,\n        closePrompts: null,\n        defaultAvatar: 'avatarDefault.png',\n        loggedInUser: {\n          avatar: 'avatarDefault.png',\n        },\n        loggedinUserName: '',\n        copy: null,\n        next: null,\n        prev: null,\n        login: null,\n        register: null,\n        URLbase: null,\n        logout: null,\n        regusername: '',\n        username: '',\n        userView: false,\n        password: '',\n        maxResultsPerPage: 8,\n        showUserSettings: null,\n        invalidLoginAttempt: false,\n        displayLoginRequired: false,\n        userSettingsVisible: false,\n        jumpToPage: null,\n        regpassword: '',\n        showUploadModal: false,\n        loadingAssets: true,\n        checkLogin: null,\n        search: {\n          string: '',\n          //audiocloudTracks: [],\n          hits: 0,\n          inProgress: false,\n          timer: 0,\n          timerHandle: null,\n          exact: false,\n          allWords: true\n        },\n        confirmpassword: '',\n        totalPages: 0,\n        totalUserPages: 0,\n        setLinksOwner: null,\n        curPage: 0,\n        curUserPage: 0,\n        regressPage: null,\n        advancePage: null,\n        lastPage: null,\n        firstPage: null,\n        selectAll: null,\n        deSelectAll: null,\n        showLoginPrompt: false,\n        loadFiles: null,\n        showRegister: false,\n        loggedIn: false,\n        loginPromptVisible: false,\n        getPages: null,\n        previewPosition: 0,\n        keys: Array(128).fill(false),\n      }\n    }\n  },\n  methods:{\n    prev(){\n      if(!this.state.showPreview) return\n      this.state.showPreview = false\n      this.state.previewPosition -= 1\n      if(this.state.previewPosition<0) this.state.previewPosition = this.state.userLinks.length + this.state.links.length - 1\n      if(this.state.previewPosition>this.state.links.length-1){\n        this.state.previewLink = this.state.userLinks[this.state.previewPosition - this.state.links.length]\n      }else{\n        this.state.previewLink = this.state.links[this.state.previewPosition]\n      }\n      this.$nextTick(()=>{\n        this.state.showPreview = true\n      })\n    },\n    next(){\n      if(!this.state.showPreview) return\n      this.state.showPreview = false\n      this.state.previewPosition++\n      this.state.previewPosition %= this.state.userLinks.length + this.state.links.length\n      if(this.state.previewPosition>this.state.links.length-1){\n        this.state.previewLink = this.state.userLinks[this.state.previewPosition - this.state.links.length]\n      }else{\n        this.state.previewLink = this.state.links[this.state.previewPosition]\n      }\n      this.$nextTick(()=>{\n        this.state.showPreview = true\n      })\n    },\n    register(){\n      console.log('registering')\n      this.state.showLoginPrompt = true\n      this.state.showRegister = true\n    },\n    showUserSettings(){\n      document.getElementsByTagName('HTML')[0].style.overflowY = 'hidden'\n      this.state.userSettingsVisible = true\n    },\n    firstPage(){\n      let search = this.state.search.string ? ('/1/' + (this.state.search.string)) : ''\n      switch(this.state.mode){\n        case 'u':\n          window.location.href = this.URLbase + '/u/' + this.state.user.name + search\n        break\n        case 'default':\n          //window.location.href = this.URLbase + search\n          this.state.curPage = 0\n          this.state.fetchUserLinks(this.state.loggedinUserID)\n          history.pushState(null,null,this.URLbase + '/' + (this.state.curPage + 1))\n        break\n        case 'track':\n          window.location.href = this.URLbase + '/track/' + this.state.curTrack + search\n        break\n      }\n    },\n    jumpToPage(pageNo){\n      let search = this.state.search.string ? ('/' + (this.state.search.string)) : ''\n      switch(this.state.mode){\n        case 'u':\n        window.location.href = this.URLbase + '/u/' + this.user.name + '/' + pageNo + search\n        break\n        case 'default':\n          //window.location.href = this.URLbase + '/' + pageNo + search\n          this.state.curPage = pageNo\n          if(this.state.loggedIn) this.state.fetchUserLinks(this.state.loggedinUserID)\n          if(this.state.curPage){\n            history.pushState(null,null,this.URLbase + '/' + (this.state.curPage + 1))\n          }else{\n            history.pushState(null,null,this.URLbase)\n          }\n        break\n        case 'track':\n        window.location.href = this.URLbase + '/track/' + this.decToAlpha(this.state.curTrack) + '/' + pageNo + search\n        break\n      }\n    },\n    lastPage(){\n      let search = this.state.search.string ? ('/' + (this.state.search.string)) : ''\n      switch(this.state.mode){\n        case 'u':\n          window.location.href = this.URLbase + '/u/' + this.state.user.name + '/' + this.state.totalUserPages + search\n        break\n        case 'default':\n          //window.location.href = this.URLbase + '/' + this.state.totalPages + search\n          this.state.curPage = this.state.totalPages - 1\n          if(this.state.loggedIn) this.state.fetchUserLinks(this.state.loggedinUserID)\n          history.pushState(null,null,this.URLbase + '/' + (this.state.curPage + 1))\n        break\n        case 'track':\n          window.location.href = this.URLbase + '/track/' + this.decToAlpha(this.state.curTrack) + '/' + this.state.totalPages + search\n        break\n      }\n    },\n    advancePage(){\n      let search = this.state.search.string ? ('/' + (this.state.search.string)) : ''\n      switch(this.state.mode){\n        case 'u':\n          window.location.href = this.URLbase + '/u/' + this.state.user.name + '/' + (this.state.curUserPage + 2) + search\n        break\n        case 'default':\n          //window.location.href = this.URLbase + '/' + (this.state.curPage + 2) + search\n          if(this.state.curPage < this.state.totalPages) this.state.curPage++\n          if(this.state.loggedIn) this.state.fetchUserLinks(this.state.loggedinUserID)\n          history.pushState(null,null,this.URLbase + '/' + (this.state.curPage + 1))\n        break\n        case 'track':\n          window.location.href = this.URLbase + '/track/' + this.decToAlpha(this.state.curTrack) + '/' +(this.state.curPage + 2) + search\n        break\n      }\n    },\n    regressPage(){\n      let search = this.state.search.string ? ('/' + (this.state.search.string)) : ''\n      switch(this.state.mode){\n        case 'u':\n          window.location.href = this.URLbase + '/u/' + this.state.user.name + '/' + this.state.curUserPage + search\n        break\n        case 'default':\n          //window.location.href = this.URLbase + '/' + this.state.curPage + search\n          if(this.state.curPage)this.state.curPage--\n          if(this.state.loggedIn) this.state.fetchUserLinks(this.state.loggedinUserID)\n          if(this.state.curPage){\n            history.pushState(null,null,this.URLbase + '/' + (this.state.curPage + 1))\n          }else{\n            history.pushState(null,null,this.URLbase)\n          }\n        break\n        case 'track':\n          window.location.href = this.URLbase + '/track/' + this.decToAlpha(this.state.curTrack) + '/' +(this.state.curPage + 2) + search\n        break\n      }\n    },\n    copy(val){\n      let copyEl = document.createElement('div')\n      copyEl.innerHTML = this.URLbase + '/' + val\n      copyEl.style.opacity = .01\n      copyEl.style.position = 'absolute'\n      document.body.appendChild(copyEl)\n      var range = document.createRange()\n      range.selectNode(copyEl)\n      window.getSelection().removeAllRanges()\n      window.getSelection().addRange(range)\n      document.execCommand(\"copy\")\n      window.getSelection().removeAllRanges()\n      copyEl.remove()\n      let el = document.querySelector('#copyConfirmation')\n      el.style.display = 'block';\n      el.style.opacity = 1\n      let reduceOpacity = () => {\n        if(+el.style.opacity > 0){\n          el.style.opacity -= .02 * 2\n          if(+el.style.opacity<.1){\n            el.style.opacity = 1\n            el.style.display = 'none'\n          }else{\n            setTimeout(()=>{\n              reduceOpacity()\n            }, 10)\n          }\n        }\n      }\n      setTimeout(()=>{reduceOpacity()}, 250)\n    },\n    closePrompts(){\n      this.state.showLoginPrompt = false\n      this.state.userSettingsVisible = false\n    },\n    closeModal(){\n      if(this.state.modalQueue.length){\n        this.state.modalContent = this.state.modalQueue.shift()\n      }else{\n        this.state.showModal = false\n        this.state.modalContent = ''\n      }\n    },\n    getAvatar(id){\n      //if(typeof this.state.userInfo[id] == 'undefined' || !this.state.userInfo[id].avatar){\n        return this.state.loggedIn ? this.state.loggedInUser.avatar : this.state.defaultAvatar\n      //} else {\n      //  this.state.userInfo[id].avatar = this.state.userInfo[id].avatar.replace(' ','')\n      //  return this.state.userInfo[id].avatar\n      //}\n    },\n    closePreview(){\n      this.state.showPreview = false\n      this.state.previewLink = null\n    },\n    checkEnabled(){\n      if(this.state.loggedinUserName) {\n        let sendData = {\n          userName: this.state.loggedinUserName, passhash: this.state.passhash,\n        }\n        fetch('checkEnabled.php',{\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify(sendData),\n        })\n        .then(res => res.json())\n        .then(data => {\n          if(!!(+data[0])){\n            console.log('logged in.')\n            this.state.loggedIn= true\n            this.state.loggedinUserID = +data[1]\n            this.state.loggedInUser.avatar = data[2]\n            this.state.username = this.state.regusername || this.state.loggedinUserName\n            //this.state.fetchUserData(this.state.loggedinUserID)\n            this.setCookie()\n            this.state.loginPromptVisible = false\n            this.state.invalidLoginAttemp = false\n            //this.state.userInfo[this.state.loggedinUserID] = {}\n            //this.state.userInfo[this.state.loggedinUserID].name = this.state.regusername || this.state.loggedinUserName\n            //this.state.userInfo[this.state.loggedinUserID].avatar = data[2]\n            //this.state.userInfo[this.state.loggedinUserID].isAdmin = +data[3]\n            if(+data[3]) this.state.isAdmin = true\n            this.fetchUserLinks(this.state.loggedinUserID)\n            //this.state.maxResultsPerPage = +data[4]\n          }else{\n            console.log('not logged in.')\n            this.state.loadingAssets = false\n            this.state.loggedIn= false\n            this.state.loggedinUserName = ''\n            this.state.loggedinUserID = ''\n            this.state.passhash = ''\n            this.state.isAdmin = false\n            this.state.invalidLoginAttempt = true\n          }\n          this.getMode()\n        })\n      }\n    },\n    setLinksOwner(){\n      if(!this.state.links.length) return\n      let sendData = {\n        userName: this.state.username,\n        passhash: this.state.passhash,\n        ids: JSON.parse(JSON.stringify(this.state.links)).map(v=>{ return v.id})\n      }\n      fetch('setOwner.php',{\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(sendData),\n      }).then(res => res.json()).then(data=>{\n        console.log('res from setOwner.php: ', data)\n        if(!data[0]) alert('error setting link owner')\n      })\n    },\n    fetchUserLinks(userID){\n      if(this.state.loggedinUserName) {\n        let sendData = {\n          userID,\n          page: this.state.curPage,\n          maxResultsPerPage: this.state.maxResultsPerPage\n        }\n        fetch('fetchUserLinks.php',{\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify(sendData),\n        })\n        .then(res => res.json())\n        .then(data => {\n          this.state.loadingAssets = false\n          if(!!(+data[0])){\n            this.state.userLinks = []\n            data[1].map((v, i) => {\n              let obj = {\n                size: +data[2][i].size,\n                type: data[2][i].type,\n                selected: false,\n                ct: i,\n                href: v,\n                userID: +data[2][i].userID,\n                id: +data[2][i].id,\n                slug: data[2][i].slug,\n                originalSlug: data[2][i].originalSlug,\n                origin: data[2][i].origin,\n                date: data[2][i].date,\n                linkType: 'userLink',\n                serverTZO: data[2][i].serverTZO,\n                views: data[2][i].views\n              }\n              this.state.userLinks.push(obj)\n            })\n            this.state.totalPages = +data[3]\n            if(this.state.curPage+1 > this.state.totalPages) this.lastPage()\n          }\n        })\n      }\n    },\n    selectAll(){\n      this.state.links.map(v=>{\n        v.selected = true\n      })\n      this.state.userLinks.map(v=>{\n        v.selected = true\n      })\n    },\n    deSelectAll(){\n      this.state.links.map(v=>{\n        v.selected = false\n      })\n      this.state.userLinks.map(v=>{\n        v.selected = false\n      })\n    },\n    deleteSelected(){\n      let count = 0\n      let linksToProcess = []\n      let userLinksToProcess = []\n      let slugs = []\n      this.state.links.map((v, i) => {\n        if(v.selected){\n          count++\n          linksToProcess = [...linksToProcess, v.id]\n          slugs = [...slugs, v.slug]\n        }\n      })\n      this.state.userLinks.map((v, i) => {\n        if(v.selected){\n          count++\n          userLinksToProcess = [...userLinksToProcess, v.id]\n          slugs = [...slugs, v.slug]\n        }\n      })\n      if(!count) return\n      if(prompt(`\\n\\nARE YOU SURE YOU WANT TO DELETE ${count} ITEM${count>1?'S':''}?\\n\\n\\n   >>> THIS ACTION CANNOT BE UNDONE! <<<\\n\\n\\n  type 'yes' to continue\"`).toLowerCase().indexOf('yes') != -1){\n        console.log('deleting selected...')\n        let sendData = {\n          userName: this.state.username,\n          passhash: this.state.passhash,\n          slugs\n        }\n        console.log('sendData', sendData)\n        fetch('delete.php', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify(sendData),\n        })\n        .then(res => res.json()).then(data => {\n          console.log(data)\n          if(data[0]){\n            //this.state.links = this.state.links.filter((v, i) => !linksToProcess.filter(q => q == v.id).length)\n            //this.state.userLinks = this.state.userLinks.filter((v, i) => !userLinksToProcess.filter(q => q == v.id).length)\n            console.log(`deleted ${count} items`)\n            //alert(`deleted ${count} items`)\n            this.state.links = []\n            this.fetchUserLinks(this.state.loggedinUserID)\n            //location.reload()\n          }else{\n            alert(`there was a problem deleting ${slugs.length > 1 ? 'these' : 'this'} asset${slugs.length > 1 ? 's' : ''}`)\n          }\n        })\n      }\n    },\n    setCookie() {\n      let cookies = document.cookie\n      cookies.split(';').map(v=>{\n        if(v.indexOf('autoplay')==-1){\n          document.cookie = v + '; expires=' + (new Date(0)).toUTCString() + '; path=/; domain=' + this.state.rootDomain\n        }\n      })\n      document.cookie = 'loggedinuser=' + this.state.loggedinUserName + '; expires=' + (new Date((Date.now()+3153600000000))).toUTCString() + '; path=/; domain=' + this.state.rootDomain\n      document.cookie = 'loggedinuserID=' + this.state.loggedinUserID + '; expires=' + (new Date((Date.now()+3153600000000))).toUTCString() + '; path=/; domain=' + this.state.rootDomain\n      document.cookie = 'token=' + this.state.passhash + '; expires=' + (new Date((Date.now()+3153600000000))).toUTCString() + '; path=/; domain=' + this.state.rootDomain\n      document.cookie = 'autoplay=' + this.state.autoplay + '; expires=' + (new Date((Date.now()+3153600000000))).toUTCString() + '; path=/; domain=' + this.state.rootDomain\n      document.cookie = 'showControls=' + this.state.showControls + '; expires=' + (new Date((Date.now()+3153600000000))).toUTCString() + '; path=/; domain=' + this.state.rootDomain\n    },\n    getPages(){\n      console.log('loaded. mode: ' + this.state.mode)\n    },\n    login(){\n      let sendData = {userName: this.state.username, password: this.state.password}\n      fetch('login.php',{\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(sendData),\n      })\n      .then(res => res.json())\n      .then(data => {\n        if(data[0]){\n          this.state.modalContent = ''\n          this.state.showModal = false\n          console.log('login succeeded!')\n          this.state.loggedIn= true\n          this.state.loggedinUserName = this.state.username\n          this.state.loggedinUserID = +data[2]\n          //this.state.fetchUserData(this.state.loggedinUserID)\n          this.state.isAdmin = +data[4]\n          this.state.passhash = data[1]\n          this.setCookie()\n          this.closePrompts()\n          this.state.invalidLoginAttemp = false\n          this.state.loggedInUser.avatar = data[3]\n          this.setLinksOwner()\n          this.fetchUserLinks(this.state.loggedinUserID)\n          this.state.links = []\n        }else{\n          console.log('not logged in.')\n          this.state.loggedIn= false\n          this.state.invalidLoginAttempt = true\n        }\n      })\n    },\n    getMode(){\n      let vars = window.location.pathname.split('/').filter(v=>v)\n      console.log(vars)\n      if(vars.length>0){\n        switch(vars[0]){\n          case 'd':\n            this.state.mode = 'single'\n            //this.state.curPage = (+vars[1])-1\n            //this.state.viewDemo = this.alphaToDec(vars[1])\n            //this.state.rawDemoID = vars[1]\n            //this.$nextTick(()=>this.loadDemo(this.alphaToDec(vars[1])))\n            //if(vars[2]){\n            //  this.state.search.string = decodeURIComponent(vars[2])\n           //}\n            break\n          case 'u':\n            /*if(!vars[1]) window.location.href = window.location.origin\n            this.state.viewAuthor = decodeURIComponent(vars[1]);\n            this.state.user = {name: decodeURIComponent(vars[1])}\n            this.state.mode = 'user'\n            if(vars[2]){\n              this.state.curUserPage = (+vars[2])-1\n              if(vars[3]){\n                this.state.search.string = decodeURIComponent(vars[3])\n                search = '/' + vars[3]\n                history.pushState(null,null,this.URLbase + '/u/' + (this.state.user.name) + '/' + (this.state.curPage + 1)) + search\n                this.beginSearch()\n              }else{\n                if(!this.state.curUserPage || this.state.curUserPage < 0 || this.state.curUserPage > 1e6) this.state.curUserPage = 0\n                history.pushState(null,null,this.URLbase + '/u/' + (vars[1]) + ((this.state.curUserPage) ? '/' + (this.state.curUserPage + 1) : ''))\n                this.getPages()\n              }\n            } else {\n              this.state.curUserPage = 0\n              history.pushState(null,null,this.URLbase + '/u/' + (vars[1]) + ((this.state.curUserPage) ? '/' + (this.state.curUserPage + 1) : ''))\n              this.getPages()\n            }*/\n          break\n          default:\n            this.state.mode = 'default'\n            let search = ''\n            if(vars[0]){\n              this.state.curPage = (+vars[0])-1\n              if(vars[1]){\n                this.state.search.string = decodeURIComponent(vars[1])\n                search = '/' + vars[1]\n                //history.pushState(null,null,this.URLbase + '/' + (this.state.curPage + 1)) + search\n                //this.beginSearch()\n                this.state.curPage = 0\n                this.state.jumpToPage(0)\n              }else{\n                history.pushState(null,null,this.URLbase + '/' + this.state.curPage ? (this.state.curPage + 1) : '')\n                if(!this.state.curPage || this.state.curPage < 0 || this.state.curPage > 1e6) this.state.curPage = 0\n                this.fetchUserLinks(this.state.loggedinUserID)\n              }\n            }else{\n              window.location.href = this.URLbase\n            }\n          break\n        }\n      }else{\n        this.state.mode = 'default'\n        this.getPages()\n        if(window.location.href !== this.URLbase + '/') window.location.href = window.location.origin\n      }\n    },\n    logout(){\n      history.pushState(null,null,this.URLbase)\n      let cookies = document.cookie\n      cookies.split(';').map(v=>{\n        if(v.indexOf('autoplay')==-1){\n          document.cookie = v + '; expires=' + (new Date(0)).toUTCString() + '; path=/; domain=' + this.state.rootDomain\n        }\n      })\n      //if(this.state.search.string != '') this.state.search.demos = this.state.search.demos.filter(v=>!v.private)\n      switch(this.state.mode){\n        case 'user':\n        //this.state.user.demos = this.state.user.demos.filter(v=>!v.private)\n        break\n        case 'single':\n        //this.state.demos = this.state.demos.filter(v=>!v.private)\n        break\n        case 'default':\n        //this.state.landingPage.demos = this.state.landingPage.demos.filter(v=>!v.private)\n        break\n      }\n      this.state.loggedIn= false\n      this.state.isAdmin = false\n      this.state.loggedinUserID = this.state.loggedinUserName = ''\n      window.location.reload()\n    },\n    checkLogin(){\n      let l = (document.cookie).split(';').filter(v=>v.split('=')[0].trim()==='loggedinuser')\n      if(l.length){\n        this.state.loggedinUserName = l[0].split('=')[1]\n        this.state.username = this.state.loggedinUserName\n        let l2 = (document.cookie).split(';').filter(v=>v.split('=')[0].trim()==='token')\n        if(l2.length){\n          this.state.passhash = l2[0].split('=')[1]\n          let l3 = (document.cookie).split(';').filter(v=>v.split('=')[0].trim()==='loggedinuserID')\n          if(l3.length){\n            this.state.loggedinUserID = +l3[0].split('=')[1]\n            this.checkEnabled()\n          }\n        }\n      } else {\n        this.state.loadingAssets = false\n        this.getMode() \n      }\n      //this.checkShowControlsPref()\n      //this.checkAutoplayPref()\n      //this.checkExactSearchPref()\n    }\n  },\n  watch: {\n    'state.loadingAssets' (val){\n      if(val){\n        this.state.modalContent = '<div style=\"width: 500px; height: 100px; position:absolute; text-align: center;font-size: 24px; color: white; top: 50%; left: 50%; transform: translate(-50%, -50%);\">... loading ...</div>'\n        this.state.showModal = true\n      }else{\n        this.state.modalContent = ''\n        this.state.showModal = false\n      }\n    },\n    'state.uploadInProgress' (val) {\n      /*console.log('state.uploadInProgress val', val)\n      if(val){\n        this.state.modalContent = `\n          loading...\n        `\n        this.state.showModal = true\n      }else{\n        this.state.modalContent = ''\n        this.state.showModal = false\n      }\n      */\n    }\n  },\n  computed:{\n    URLbase(){\n      let ret = window.location.origin\n      if(ret.toLowerCase().indexOf(this.state.rootDomain) === -1){\n        ret += '/imjur'\n      }\n      return ret\n    }\n  },\n  mounted(){\n  \n    window.onmousedown = e => {\n      this.state.keys[18] = false\n    }\n  \n    window.onkeyup = e =>{\n      e.preventDefault()\n      e.stopPropagation()\n      this.state.keys[e.keyCode] = false\n      this.state.keys[18] = false\n    }\n    \n    window.onkeydown = e =>{\n      this.state.keys[e.keyCode] = true\n      console.log(e.keyCode)\n      if(this.state.keys[18]){\n        e.preventDefault()\n        e.stopPropagation()\n      }\n      switch(e.keyCode){\n        case 116:\n          window.location.reload()\n        break\n        case 65:\n          if(this.state.keys[17]){\n            e.preventDefault()\n            e.stopPropagation()\n            if(this.state.keys[16]){ // ctrl + shift + a\n              this.deSelectAll()\n            }\n            if(!this.state.keys[16]){ // ctrl + a\n              this.selectAll()\n            }\n          }\n        break\n        case 46:\n          this.deleteSelected()\n        break\n        case 37: // left arrow\n          if(this.state.showPreview){\n            this.prev()\n          }else{\n            if(this.state.keys[18] && this.state.curPage) this.regressPage()\n          }\n        break\n        case 39: // right arrow\n           if(this.state.showPreview){\n            this.next()\n          }else{\n            if(this.state.keys[18] && this.state.curPage < this.state.totalPages) this.advancePage()\n          }\n        break\n        case 36: // home\n          if(this.state.keys[18]) this.firstPage()\n        break\n        case 35: // end\n          if(this.state.keys[18]) this.lastPage()\n        break\n        case 27:\n          this.state.showPreview = false\n          if(!this.state.uploadInProgress && !this.state.showLoginPrompt) this.state.showModal = false\n          this.closePrompts()\n        break\n      }\n    }\n    this.state.closeModal = this.closeModal\n    this.state.prev = this.prev\n    this.state.next = this.next\n    this.state.copy = this.copy\n    this.state.login = this.login\n    this.state.logout = this.logout\n    this.state.URLbase = this.URLbase\n    this.state.register = this.register\n    this.state.lastPage = this.lastPage\n    this.state.getPages = this.getPages\n    this.state.firstPage = this.firstPage\n    this.state.getAvatar = this.getAvatar\n    this.state.selectAll = this.selectAll\n    this.state.setCookie = this.setCookie\n    this.state.jumpToPage= this.jumpToPage\n    this.state.checkLogin = this.checkLogin\n    this.state.advancePage = this.advancePage\n    this.state.regressPage = this.regressPage\n    this.state.deSelectAll = this.deSelectAll\n    this.state.closePrompts = this.closePrompts\n    this.state.closePreview = this.closePreview\n    this.state.setLinksOwner = this.setLinksOwner\n    this.state.fetchUserLinks = this.fetchUserLinks\n    this.state.deleteSelected = this.deleteSelected\n    this.state.showUserSettings = this.showUserSettings\n    this.checkLogin()\n  }\n}\n</script>\n\n<style>\n/* latin-ext */\n@font-face {\n  font-family: 'Courier Prime';\n  font-style: normal;\n  font-weight: 400;\n  font-display: swap;\n  src: url(https://fonts.gstatic.com/s/courierprime/v9/u-450q2lgwslOqpF_6gQ8kELaw9pWt_-.woff2) format('woff2');\n  unicode-range: U+0100-02AF, U+0304, U+0308, U+0329, U+1E00-1E9F, U+1EF2-1EFF, U+2020, U+20A0-20AB, U+20AD-20CF, U+2113, U+2C60-2C7F, U+A720-A7FF;\n}\n/* latin */\n@font-face {\n  font-family: 'Courier Prime';\n  font-style: normal;\n  font-weight: 400;\n  font-display: swap;\n  src: url(https://fonts.gstatic.com/s/courierprime/v9/u-450q2lgwslOqpF_6gQ8kELawFpWg.woff2) format('woff2');\n  unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+0304, U+0308, U+0329, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;\n}\nbody,html{\n  background-color: #000;\n  background-image: url(./assets/new_bg.jpg);\n  background-repeat: repeat;\n  background-size: cover;\n  background-position: center center;\n  margin: 0;\n  height: 100vh;\n  min-width: 600px;\n  overflow: hidden;\n  font-family: Courier Prime;\n}\na:visited{\n  color: #40f;\n}\nbutton:focus{\n  outline: none;\n}\nbutton{\n  font-size: 18px;\n  border: 2px solid #0008;\n  border-radius: 6px;\n  background: #adcc;\n  padding: 4px;\n  padding-left: 10px;\n  padding-right: 10px;\n  font-weight: 900;\n  min-width: 200px;\n  cursor: pointer;\n  font-family: Courier Prime;\n  color: #000;\n  text-shadow: 1px 1px 3px #40f;\n}\na{\n  text-decoration: none;\n  color: #08f;\n}\n.copyButton{\n  display: inline-block;\n  width: 30px;\n  height: 30px;\n  background-image: url(./assets/link.png);\n  cursor: pointer;\n  z-index: 500;\n  background-size: 90% 90%;\n  left: calc(50% + 180px);\n  background-position: center center;\n  background-repeat: no-repeat;\n  border: none;\n  background-color: #8fcc;\n  margin: 5px;\n  border-radius: 5px;\n  vertical-align: middle;\n}\n#copyConfirmation{\n  display: none;\n  position: absolute;\n  width: 100vw;\n  height: 100vh;\n  top: 0;\n  left: 0;\n  background: #012d;\n  color: #8ff;\n  opacity: 1;\n  text-shadow: 0 0 5px #fff;\n  font-size: 46px;\n  text-align: center;\n  z-index: 10000;\n}\n#innerCopied{\n  position: absolute;\n  top: 50%;\n  width: 100%;\n  z-index: 1020;\n  text-align: center;\n  transform: translate(0, -50%) scale(2.0, 1);\n}\n.resultLink{\n  text-decoration: none;\n  color: #fff;\n  background: #4f86;\n  padding: 10px;\n  display: inline-block;\n}\n#resultDiv{\n  position: absolute;\n  margin-top: 50px;\n  left: 50%;\n  transform: translate(-50%);\n}\n.input{\n  text-align: center;\n  font-size: 24px;\n  background: #0004;\n  border: none;\n  border-bottom: 2px solid #2fa;\n  width: 300px;\n  color: #ffa;\n}\ninput[type=text]{\n  font-size: 24px;\n  background: #0004;\n  border: none;\n  border-bottom: 2px solid #2fa;\n  width: 300px;\n  color: #ffa;\n}\ninput[type=checkbox]{\n  transform: scale(1.5);\n  margin: 8px;\n  margin-left: 5px;\n}\ninput:focus{\n  outline: none;\n}\nbutton:focus{\n  outline: none;\n}\nselect:focus{\n  outline: none;\n}\n/* Customize the label (the checkboxLabel) */\n.checkboxLabel {\n  padding-left: 35px;\n  margin-bottom: -2px;\n  cursor: pointer;\n  margin: 0;\n  cursor: pointer;\n  font-size: 22px;\n  -webkit-user-select: none;\n  -moz-user-select: none;\n  -ms-user-select: none;\n  user-select: none;\n  text-align: left;\n  position: absolute;\n  margin-left: 30px;\n}\n\n/* Hide the browser's default checkbox */\n.checkboxLabel input {\n  position: absolute;\n  opacity: 0;\n  cursor: pointer;\n  height: 0;\n  width: 0;\n}\n\n/* Create a custom checkbox */\n.checkmark {\n  cursor: pointer;\n  position: absolute;\n  top: 0;\n  left: 0;\n  height: 25px;\n  width: 25px;\n  border: 1px solid #2468;\n  background-color: #123;\n  border-radius: 5px;\n}\n\n/* On mouse-over, add a grey background color */\n.checkboxLabel:hover input ~ .checkmark {\n  background-color: #234;\n}\n\n/* When the checkbox is checked, add a blue background */\n.checkboxLabel input:checked ~ .checkmark {\n  background-color: #208;\n}\n\n/* Create the checkmark/indicator (hidden when not checked) */\n.checkmark:after {\n  content: \"\";\n  position: absolute;\n  display: none;\n}\n\n/* Show the checkmark when checked */\n.checkboxLabel input:checked ~ .checkmark:after {\n  display: block;\n}\n\n/* Style the checkmark/indicator */\n.checkboxLabel .checkmark:after {\n  left: 7px;\n  top: 1px;\n  width: 7px;\n  height: 16px;\n  border: solid white;\n  border-width: 0 5px 5px 0;\n  -webkit-transform: rotate(45deg);\n  -ms-transform: rotate(45deg);\n  transform: rotate(45deg);\n}\n::-webkit-scrollbar {\n  width: 20px;\n}\n\n::-webkit-scrollbar-track {\n  background: #204; \n}\n \n::-webkit-scrollbar-thumb {\n  background: #308;\n  border-radius: 20px;\n}\n\n::-webkit-scrollbar-thumb:hover {\n  background: #60f; \n}\n</style>\n"],"mappings":";gCAkBIA,mBAAA,CAAoE;EAA/DC,EAAE,EAAC;AAAkB,I,aAACD,mBAAA,CAAmC;EAA9BC,EAAE,EAAC;AAAa,GAAC,SAAO,E;;;;;;;;;;uBAjB1DC,mBAAA,CAkBM,cAjBJC,YAAA,CAA+BC,iBAAA;IAAhBC,KAAK,EAAEC,KAAA,CAAAD;EAAK,wBAC3BF,YAAA,CAA+BI,kBAAA;IAAhBF,KAAK,EAAEC,KAAA,CAAAD;EAAK,wBAC3BF,YAAA,CAA+BK,eAAA;IAAhBH,KAAK,EAAEC,KAAA,CAAAD;EAAK,wBAC3BF,YAAA,CAA+BM,iBAAA;IAAhBJ,KAAK,EAAEC,KAAA,CAAAD;EAAK,wBACQC,KAAA,CAAAD,KAAK,CAACK,mBAAmB,I,cAA5DC,YAAA,CAAgEC,uBAAA;IANpEC,GAAA;IAMmBR,KAAK,EAAEC,KAAA,CAAAD;4BAN1BS,mBAAA,YAOuCR,KAAA,CAAAD,KAAK,CAACU,eAAe,I,cAAxDJ,YAAA,CAA2DK,sBAAA;IAP/DH,GAAA;IAOmBR,KAAK,EAAEC,KAAA,CAAAD;4BAP1BS,mBAAA,YAUYR,KAAA,CAAAD,KAAK,CAACY,SAAS,I,cAFvBN,YAAA,CAIEO,gBAAA;IAZNL,GAAA;IASOR,KAAK,EAAEC,KAAA,CAAAD,KAAK;IAEZc,OAAO,EAAEb,KAAA,CAAAD,KAAK,CAACe;uCAXtBN,mBAAA,YAeYR,KAAA,CAAAD,KAAK,CAACgB,WAAW,I,cAFzBV,YAAA,CAIEW,kBAAA;IAjBNT,GAAA;IAcOR,KAAK,EAAEC,KAAA,CAAAD,KAAK;IAEZkB,IAAI,EAAEjB,KAAA,CAAAD,KAAK,CAACmB;oCAhBnBV,mBAAA,YAkBIW,UAAoE,C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}