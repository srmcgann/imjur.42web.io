{"ast":null,"code":"export default {\n  name: 'UserSettings',\n  props: ['state'],\n  data() {\n    return {\n      newPassword: '',\n      confirmNewPassword: '',\n      currentPassword: '',\n      savedPassword: false,\n      showInvalid: false,\n      avatarUpdateSuccessful: 0\n    };\n  },\n  computed: {\n    passwordsMatch() {\n      return this.newPassword === this.confirmNewPassword;\n    },\n    validate() {\n      return this.passwordsMatch && this.newPassword && this.confirmNewPassword && this.currentPassword;\n    }\n  },\n  methods: {\n    savePassword() {\n      if (this.validate) {\n        let sendData = {\n          userName: this.state.loggedinUserName,\n          currentPassword: this.currentPassword,\n          newPassword: this.newPassword\n        };\n        fetch('changePassword.php', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(sendData)\n        }).then(res => res.json()).then(data => {\n          if (data[0]) {\n            this.state.passhash = data[1];\n            this.savedPassword = true;\n            this.currentPassword = this.newPassword = this.confirmNewPassword = '';\n            this.state.setCookie();\n          } else {\n            this.showInvalid = true;\n          }\n        });\n      } else {\n        this.savedPassword = false;\n        this.showInvalid = true;\n      }\n    },\n    closePrompt() {\n      this.state.closePrompts();\n    },\n    updateAvatar() {\n      let sendData = {\n        userName: this.state.loggedinUserName,\n        passhash: this.state.passhash,\n        newAvatar: this.state.loggedInUser.avatar\n      };\n      fetch('updateAvatar.php', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(sendData)\n      }).then(res => res.json()).then(data => {\n        if (data[0]) {\n          this.avatarUpdateSuccessful = 1;\n          //this.state.user.avatar = this.state.loggedInUser.avatar\n          setTimeout(() => this.avatarUpdateSuccessful = 0, 2000);\n        } else {\n          this.avatarUpdateSuccssful = -1;\n          setTimeout(() => this.avatarUpdateSuccessful = 0, 2000);\n        }\n      });\n    }\n  },\n  mounted() {\n    this.$refs.currentpassword.focus();\n  }\n};","map":{"version":3,"names":["name","props","data","newPassword","confirmNewPassword","currentPassword","savedPassword","showInvalid","avatarUpdateSuccessful","computed","passwordsMatch","validate","methods","savePassword","sendData","userName","state","loggedinUserName","fetch","method","headers","body","JSON","stringify","then","res","json","passhash","setCookie","closePrompt","closePrompts","updateAvatar","newAvatar","loggedInUser","avatar","setTimeout","avatarUpdateSuccssful","mounted","$refs","currentpassword","focus"],"sources":["/home/whitehotrobot/imjur.42web.io/src/components/UserSettings.vue"],"sourcesContent":["<template>\n  <div class=\"UserSettings\">\n    <div class=\"mainContainer\">\n      <span style=\"font-size: 28px;line-height: 1em;font-weight: 900;\">{{state.loggedinUserName}}\n        <br><span style=\"color: #aff;font-size: 36px;font-weight: 400\">settings</span>\n      </span>\n      <div class=\"spacerDiv\"></div>\n      your avatar<br>\n      <div class=\"editAvatarImgContainer\">\n        <img :src=\"state.loggedInUser.avatar\" class=\"editAvatarImg\">\n      </div>\n      <input style=\"opacity: 0; position: absolute;z-index: -1;\" ref=\"tabAnchor\"\n        v-on:keydown.shift.tab=\"$refs.cancelButton.focus()\"\n      >\n      <input\n        type=\"text\"\n        ref=\"avatarURL\"\n        v-model=\"state.loggedInUser.avatar\"\n        class=\"input avatarInput\"\n        @input=\"updateAvatar()\"\n        @click=\"$event.target.select()\"\n        placeholder=\"URL to an online image...\"\n      ><br>\n      <div v-if=\"avatarUpdateSuccessful==1\" style=\"color: #4f8; font-size: 18px; background:#055; padding: 4px;margin-top:10px;padding-bottom: 8px;\">\n        &nbsp;&nbsp;&nbsp; avatar update successful\n      </div>\n      <div v-if=\"avatarUpdateSuccessful==-1\" style=\"color: #f44; font-size: 18px; background:#500; padding: 4px;margin-top:10px;padding-bottom: 8px;\">\n        &nbsp;&nbsp;&nbsp; avatar update NOT successful\n      </div>\n      <div class=\"spacerDiv\" style=\"margin-top: 20px\"></div>\n      change your password<br>\n      <input\n        type=\"password\"\n        ref=\"currentpassword\"\n        class=\"input passwordFields\"\n        v-model=\"currentPassword\"\n        v-on:keydown.enter=\"savePassword()\"\n        @click=\"$event.target.select()\"\n        @input=\"showInvalid=false\"\n        placeholder=\"current password\"\n      ><br>\n      <input\n        type=\"password\"\n        ref=\"newpassword\"\n        class=\"input passwordFields\"\n        :class=\"{'passwordsDoNotMatch': !passwordsMatch && newPassword && confirmNewPassword, 'passwordsMatch': passwordsMatch && newPassword && confirmNewPassword}\"\n        v-model=\"newPassword\"\n        v-on:keydown.enter=\"savePassword()\"\n        @input=\"showInvalid=false\"\n        @click=\"$event.target.select()\"\n        placeholder=\"new password\"\n      ><br>\n      <input\n        type=\"password\"\n        ref=\"confirmnewpassword\"\n        v-model=\"confirmNewPassword\"\n        @input=\"showInvalid=false\"\n        class=\"input passwordFields\"\n        :class=\"{'passwordsDoNotMatch': !passwordsMatch && newPassword && confirmNewPassword, 'passwordsMatch': passwordsMatch && newPassword && confirmNewPassword}\"\n        @click=\"$event.target.select()\"\n        v-on:keydown.enter=\"savePassword()\"\n        placeholder=\"confirm new password\"\n      ><br>\n      <div v-if=\"savedPassword\" style=\"color: #4f8; font-size: 24px; background:#055; padding: 4px;margin-top:10px;padding-bottom: 8px;\">\n        &nbsp;&nbsp;&nbsp; password saved\n      </div>\n      <div v-if=\"showInvalid\" style=\"color: #f44; font-size: 20px; background:#400;padding: 4px;margin-top:10px;padding-bottom: 8px;\">\n        &nbsp;&nbsp;&nbsp; ERROR SAVING PASSWORD!\n      </div>\n      <div v-if=\"!savedPassword && !showInvalid && !passwordsMatch && newPassword && confirmNewPassword\" style=\"color: #f00; font-size: 20px\">\n        &nbsp;&nbsp;&nbsp; passwords do not match\n      </div>\n      <div v-if=\"!savedPassword && !showInvalid && passwordsMatch && newPassword && confirmNewPassword\" style=\"color: #0f4\">\n        &nbsp;&nbsp;&nbsp; <i>passwords match!</i>\n      </div>\n      <button\n        @click=\"savePassword()\"\n        ref=\"cancelButton\"\n        :disabled=\"!validate\"\n        :class=\"{'disabledButton': !validate}\"\n        class=\"userSettingsButton\"\n      >save</button>      \n      <div class=\"spacerDiv\"></div>\n      <button @click=\"closePrompt()\"\n        v-on:keydown.tab=\"$refs.tabAnchor.focus()\"\n        v-on:keydown.shift.tab=\"$refs.cancelButton.focus()\"\n        ref=\"cancelButton\"\n        style=\"background: #faa\"\n        class=\"userSettingsButton\"\n      >close / cancel</button>\n      <input style=\"opacity: 0; position: absolute;z-index: -1\" ref=\"endTabAnchor\"\n        v-on:keydown.shift.tab=\"$refs.confirmnewassword.focus()\"\n      >\n    </div>\n  </div>\n</template>\n\n\n<script>\n\nexport default{\n  name: 'UserSettings',\n  props: [ 'state' ],\n  data(){\n    return {\n      newPassword: '',\n      confirmNewPassword: '',\n      currentPassword: '',\n      savedPassword: false,\n      showInvalid: false,\n      avatarUpdateSuccessful: 0\n    }\n  },\n  computed: {\n    passwordsMatch(){\n      return this.newPassword === this.confirmNewPassword\n    },\n    validate(){\n      return this.passwordsMatch && this.newPassword && this.confirmNewPassword && this.currentPassword\n    },\n  },\n  methods:{\n    savePassword(){\n      if(this.validate){\n        let sendData = {userName: this.state.loggedinUserName, currentPassword: this.currentPassword, newPassword: this.newPassword}\n        fetch('changePassword.php',{\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify(sendData),\n        })\n        .then(res => res.json())\n        .then(data => {\n          if(data[0]){\n            this.state.passhash = data[1]\n            this.savedPassword = true\n            this.currentPassword = this.newPassword = this.confirmNewPassword = ''\n            this.state.setCookie()\n          } else {\n            this.showInvalid = true\n          }\n        })\n      } else {\n        this.savedPassword = false\n        this.showInvalid = true\n      }\n    },\n    closePrompt(){\n      this.state.closePrompts()\n    },\n    updateAvatar(){\n      let sendData = {userName: this.state.loggedinUserName, passhash: this.state.passhash, newAvatar: this.state.loggedInUser.avatar}\n      fetch('updateAvatar.php',{\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(sendData),\n      })\n      .then(res => res.json())\n      .then(data => {\n        if(data[0]){\n          this.avatarUpdateSuccessful = 1\n          //this.state.user.avatar = this.state.loggedInUser.avatar\n          setTimeout(()=>this.avatarUpdateSuccessful = 0, 2000)\n        } else {\n          this.avatarUpdateSuccssful = -1\n          setTimeout(()=>this.avatarUpdateSuccessful = 0, 2000)\n        }\n      })\n    }\n  },\n  mounted(){\n    this.$refs.currentpassword.focus()\n  }\n}\n</script>\n\n<style>\n.UserSettings{\n  position: absolute;\n  width: 100vw;\n  height: 100vh;\n  z-index: 10000;\n  top: 0;\n  background: #012e;\n  text-align: center;\n}\n.mainContainer{\n  position: absolute;\n  left: 50%;\n  top: 45%;\n  font-size: 24px;\n  min-width: 320px;\n  min-height: 200px;\n  border-radius: 10px;\n  background: #024;\n  padding: 20px;\n  color: #ff0;\n  transform: translate(-50%, -50%);\n}\n.inputTitle{\n  text-align: left;\n  width: 300px;\n  margin-left: auto;\n  margin-right: auto;\n}\n.inputContainer{\n  padding: 10px;\n}\n.title{\n  font-size: 2em;\n}\n.input{\n  text-align: center;\n  background: #0004;\n  border: none;\n  border-bottom: 2px solid #2fa;\n  width: calc(100% - 5px);\n  font-size: 16px;\n  color: #ffa;\n}\n.input:focus{\n  outline: none;\n}\n.toggleButton{\n  position: absolute;\n  transform: translate(-55%,-36px);\n  background: #6df;\n}\n.disabledButton{\n  color: #888;\n  background: #333;\n}\n.editAvatarImgContainer{\n  margin-top: 15px;\n  width: 250px;\n  height: 250px;\n  margin-left: auto;\n  margin-right: auto;\n  background: linear-gradient(135deg, #333, #000)\n}\n.editAvatarImg{\n  margin-top: 50%;\n  transform: translateY(-50%);\n  width: 100%;\n  height: 100%;\n  object-fit: contain;\n  border-radius: 50%;\n}\n.passwordFields{\n  text-align: center;\n  background: #0004;\n  border: none;\n  border-bottom: 2px solid #2fa;\n  width: calc(100% - 5px);\n  color: #ffa;\n  font-size: 22px;\n  max-width: 320px;\n}\n.passwordsDoNotMatch{\n  background: #b446!important;\n}\n.passwordsMatch{\n  background: #4b46!important;\n}\n.avatarInput{\n  font-size: 16px!important;\n}\n.userSettingsButton{\n  margin: 5px;\n}\n</style>\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}