{"ast":null,"code":"export default {\n  name: 'LoginPrompt',\n  props: ['state'],\n  data() {\n    return {\n      userNameAvailable: true,\n      showInvalid: false\n    };\n  },\n  computed: {\n    passwordsMatch() {\n      return this.state.regpassword === this.state.confirmpassword;\n    },\n    validate() {\n      return this.state.regusername && this.state.regpassword && this.passwordsMatch && this.userNameAvailable;\n    }\n  },\n  methods: {\n    submit() {\n      if (this.validate) {\n        let sendData = {\n          userName: this.state.regusername,\n          password: this.state.regpassword,\n          avatar: this.state.defaultAvatar\n        };\n        fetch('submitReg.php', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(sendData)\n        }).then(res => res.json()).then(data => {\n          console.log(data);\n          if (data[0]) {\n            this.state.modalContent = '';\n            this.state.showModal = false;\n            this.state.userName = this.state.regusername;\n            console.log('login succeeded!');\n            this.state.loggedIn = true;\n            this.state.loggedinUserName = this.state.regusername;\n            this.state.loggedinUserID = +data[2];\n            //this.state.fetchUserData(this.state.loggedinUserID)\n            this.state.isAdmin = +data[4];\n            this.state.loggedInUser.avatar = this.state.defaultAvatar;\n            this.state.passhash = data[1];\n            this.state.setCookie();\n            this.state.closePrompts();\n            this.state.invalidLoginAttemp = false;\n            this.state.checkLogin();\n            this.state.setLinksOwner();\n          } else {\n            this.showInvalid = true;\n          }\n        });\n      } else {\n        console.log('failed validation. no reg submitted');\n        this.showInvalid = true;\n      }\n    },\n    toggleView() {\n      this.state.showRegister = !this.state.showRegister;\n      this.$nextTick(() => {\n        if (this.state.showRegister) {\n          this.$refs.regusername.focus();\n        } else {\n          this.$refs.username.focus();\n        }\n      });\n    },\n    toggleLogin() {\n      if (!this.state.loggedIn) this.state.showLoginPrompt();\n    },\n    closePrompt() {\n      this.state.closePrompts();\n    },\n    checkUserNameAvailability() {\n      this.userNameAvailable = true;\n      if (this.state.regusername) {\n        let sendData = {\n          userName: this.state.regusername\n        };\n        fetch('checkUserNameAvailability.php', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(sendData)\n        }).then(res => res.json()).then(data => {\n          this.userNameAvailable = data;\n        });\n      }\n    }\n  },\n  mounted() {\n    this.state.confirmpassword = '';\n    if (this.state.showRegister) {\n      this.$refs.regusername.focus();\n    } else {\n      this.$refs.username.focus();\n    }\n  }\n};","map":{"version":3,"names":["name","props","data","userNameAvailable","showInvalid","computed","passwordsMatch","state","regpassword","confirmpassword","validate","regusername","methods","submit","sendData","userName","password","avatar","defaultAvatar","fetch","method","headers","body","JSON","stringify","then","res","json","console","log","modalContent","showModal","loggedIn","loggedinUserName","loggedinUserID","isAdmin","loggedInUser","passhash","setCookie","closePrompts","invalidLoginAttemp","checkLogin","setLinksOwner","toggleView","showRegister","$nextTick","$refs","focus","username","toggleLogin","showLoginPrompt","closePrompt","checkUserNameAvailability","mounted"],"sources":["/home/whitehotrobot/imjur.42web.io/src/components/LoginPrompt.vue"],"sourcesContent":["<template>\r\n  <div class=\"LoginPrompt\">\r\n    <div class=\"mainLoginContainer\">\r\n      <div v-if=\"!state.showRegister\">\r\n        <span class=\"title\">login</span><br>\r\n        <div class=\"inputContainer\">\r\n          <div class=\"inputTitle\">User Name</div>\r\n          <input\r\n            style=\"position: absolute; z-index:-1; opacity: 0;z-index: -1\"\r\n            ref=\"loginTabAnchor\"\r\n            v-on:keydown.shift.tab=\"$refs.bottomTabAnchor.focus()\" type=\"text\"\r\n          >\r\n          <input\r\n            type=\"text\"\r\n            ref=\"username\"\r\n            v-model=\"state.username\"\r\n            class=\"input\"\r\n            v-on:keydown.enter=\"state.login()\"\r\n            v-on:keydown.shift.tab=\"$refs.bottomTabAnchor.focus()\"\r\n          ><br>\r\n        </div>\r\n        <div class=\"inputContainer\">\r\n          <div class=\"inputTitle\">Password</div>\r\n          <input\r\n            type=\"password\"\r\n            ref=\"password\"\r\n            v-model=\"state.password\"\r\n            class=\"input\"\r\n            v-on:keydown.enter=\"state.login()\"\r\n          ><br>\r\n        </div>\r\n        <button @click=\"state.login()\" ref=\"go\">Go</button>\r\n        <button @click=\"closePrompt()\"\r\n          v-on:keydown.tab=\"$refs.loginTabAnchor.focus()\"\r\n          v-on:keydown.shift.tab=\"$refs.cancelButton.focus()\"\r\n          style=\"background: #faa\"\r\n          ref=\"cancelButton\"\r\n        >cancel</button>\r\n        <div v-if=\"state.invalidLoginAttempt\" class=\"invalidLogin\">\r\n          Invalid User Name or Password\r\n        </div>\r\n        <div class=\"spacerDiv\" style=\"margin-top: 30px;\"></div>\r\n        <button class=\"toggleButton\" @click=\"toggleView()\" ref=\"bottomTabAnchor\">\r\n          &darr;&nbsp;&nbsp;&nbsp;register&nbsp;&nbsp;&nbsp;&darr;\r\n        </button>\r\n      </div>\r\n      <div v-else>\r\n        <div class=\"spacerDiv\" style=\"margin-top: 10px;\"></div>\r\n        <button class=\"toggleButton\" @click=\"toggleView()\">\r\n          &uarr;&nbsp;&nbsp;&nbsp;login&nbsp;&nbsp;&nbsp;&uarr;\r\n        </button>\r\n        <br>\r\n        <div v-if=\"state.displayLoginRequired\" class=\"mustRegister\">\r\n          You must register or<br>\r\n          log-in to create a demo!<br>\r\n        </div>\r\n        <span class=\"title\">register</span><br>\r\n        <div class=\"inputContainer\">\r\n          <div class=\"inputTitle\">\r\n            User Name\r\n            <div v-if=\"!userNameAvailable\" style=\"display: inline-block; color: #f00\">\r\n              &nbsp;&nbsp;&nbsp; <i>user name unavailable</i>\r\n            </div>\r\n            <div v-if=\"userNameAvailable && state.regusername\" style=\"display: inline-block; color: #0f4\">\r\n              &nbsp;&nbsp;&nbsp; <i>user name available</i>\r\n            </div>\r\n          </div>\r\n          <input\r\n            style=\"position: absolute;; z-index:-1; opacity: 0;z-index: -1\"\r\n            ref=\"loginTabAnchor\"\r\n            type=\"text\"\r\n            v-on:keydown.enter=\"submit()\"\r\n            v-on:keydown.shift.tab=\"$refs.bottomTabAnchor.focus()\"\r\n          >\r\n          <input\r\n            type=\"text\"\r\n            ref=\"regusername\"\r\n            v-model=\"state.regusername\"\r\n            class=\"input\"\r\n            maxlength=\"16\"\r\n            :class=\"{'userNameUnavailable': !userNameAvailable, 'userNameAvailable': userNameAvailable && state.regusername}\"\r\n            @input=\"checkUserNameAvailability()\"\r\n            v-on:keydown.enter=\"submit()\"\r\n            v-on:keydown.shift.tab=\"$refs.bottomTabAnchor.focus()\"\r\n          ><br>\r\n        </div>\r\n        <div class=\"inputContainer\">\r\n          <div class=\"inputTitle\">\r\n            Password\r\n            <div v-if=\"!passwordsMatch && state.regpassword && state.confirmpassword\" style=\"display: inline-block; color: #f00\">\r\n              &nbsp;&nbsp;&nbsp; passwords do not match\r\n            </div>\r\n            <div v-if=\"passwordsMatch && state.regpassword && state.confirmpassword\" style=\"display: inline-block; color: #0f4\">\r\n              &nbsp;&nbsp;&nbsp; <i>passwords match!</i>\r\n            </div>\r\n          </div>\r\n          <input type=\"password\"\r\n            ref=\"regpassword\"\r\n            v-model=\"state.regpassword\"\r\n            class=\"input\"\r\n            :class=\"{'passwordsDoNotMatch': !passwordsMatch && state.regpassword && state.confirmpassword, 'passwordsMatch': passwordsMatch && state.regpassword && state.confirmpassword}\"\r\n            v-on:keydown.enter=\"submit()\"\r\n          ><br>\r\n        </div>\r\n        <div class=\"inputContainer\">\r\n          <div class=\"inputTitle\">Confirm Password</div>\r\n          <input\r\n            type=\"password\"\r\n            ref=\"confirmpassword\"\r\n            v-model=\"state.confirmpassword\"\r\n            class=\"input\"\r\n            :class=\"{'passwordsDoNotMatch': !passwordsMatch && state.regpassword && state.confirmpassword, 'passwordsMatch': passwordsMatch && state.regpassword && state.confirmpassword}\"\r\n            v-on:keydown.enter=\"submit()\"\r\n          ><br>\r\n        </div>\r\n        <button\r\n          @click=\"submit()\"\r\n          :disabled=\"!validate\"\r\n          :class=\"{'disabledButton': !validate}\"\r\n        >submit</button>\r\n        <button\r\n          @click=\"closePrompt()\"\r\n          v-on:keydown.tab=\"$refs.loginTabAnchor.focus()\"\r\n          v-on:keydown.shift.tab=\"$refs.cancelButton.focus()\"\r\n          ref=\"cancelButton\"\r\n          style=\"background: #faa\"\r\n        >cancel</button>\r\n        <div v-if=\"showInvalid\" class=\"invalidLogin\">\r\n          Whoa! check your info...\r\n        </div>\r\n        <input\r\n          style=\"position: absolute;; z-index:-1; opacity: 0;z-index: -1\"\r\n          ref=\"bottomTabAnchor\"\r\n          type=\"text\"\r\n        >\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n\r\n<script>\r\n\r\nexport default{\r\n  name: 'LoginPrompt',\r\n  props: [ 'state' ],\r\n  data(){\r\n    return {\r\n      userNameAvailable: true,\r\n      showInvalid: false\r\n    }\r\n  },\r\n  computed: {\r\n    passwordsMatch(){\r\n      return this.state.regpassword === this.state.confirmpassword\r\n    },\r\n    validate(){\r\n      return this.state.regusername && this.state.regpassword && this.passwordsMatch && this.userNameAvailable\r\n    }\r\n  },\r\n  methods:{\r\n    submit(){\r\n      if(this.validate){\r\n        let sendData = {userName: this.state.regusername, password: this.state.regpassword, avatar: this.state.defaultAvatar}\r\n        fetch('submitReg.php',{\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify(sendData),\r\n        })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n          console.log(data)\r\n          if(data[0]){\r\n            this.state.modalContent = ''\r\n            this.state.showModal = false\r\n            this.state.userName = this.state.regusername\r\n            console.log('login succeeded!')\r\n            this.state.loggedIn= true\r\n            this.state.loggedinUserName = this.state.regusername\r\n            this.state.loggedinUserID = +data[2]\r\n            //this.state.fetchUserData(this.state.loggedinUserID)\r\n            this.state.isAdmin = +data[4]\r\n            this.state.loggedInUser.avatar = this.state.defaultAvatar\r\n            this.state.passhash = data[1]\r\n            this.state.setCookie()\r\n            this.state.closePrompts()\r\n            this.state.invalidLoginAttemp = false\r\n            this.state.checkLogin()\r\n            this.state.setLinksOwner()\r\n          } else {\r\n            this.showInvalid = true\r\n          }\r\n        })\r\n      } else {\r\n        console.log('failed validation. no reg submitted')\r\n        this.showInvalid = true\r\n      }\r\n    },\r\n    toggleView(){\r\n      this.state.showRegister = !this.state.showRegister\r\n      this.$nextTick(()=>{\r\n        if(this.state.showRegister){\r\n          this.$refs.regusername.focus()\r\n        } else {\r\n          this.$refs.username.focus()\r\n        }\r\n      })\r\n    },\r\n    toggleLogin(){\r\n      if(!this.state.loggedIn) this.state.showLoginPrompt()\r\n    },\r\n    closePrompt(){\r\n      this.state.closePrompts()\r\n    },\r\n    checkUserNameAvailability(){\r\n      this.userNameAvailable = true\r\n      if(this.state.regusername){\r\n        let sendData = {userName: this.state.regusername}\r\n        fetch('checkUserNameAvailability.php',{\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify(sendData),\r\n        })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n          this.userNameAvailable = data\r\n        })\r\n      }\r\n    }\r\n  },\r\n  mounted(){\r\n    this.state.confirmpassword = ''\r\n    if(this.state.showRegister) {\r\n      this.$refs.regusername.focus()\r\n    }else{\r\n      this.$refs.username.focus()\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.LoginPrompt{\r\n  position: fixed;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  z-index: 10000;\r\n  top: 0;\r\n  background: #102e;\r\n  text-align: center;\r\n}\r\nhr{\r\n  border: 2px solid #0aaa;\r\n}\r\n.mainLoginContainer{\r\n  position: absolute;\r\n  left: 50%;\r\n  top: 45%;\r\n  min-width: 320px;\r\n  min-height: 200px;\r\n  border-radius: 10px;\r\n  background: #204;\r\n  padding: 20px;\r\n  color: #08f;\r\n  transform: translate(-50%, -50%);\r\n}\r\n.inputTitle{\r\n  text-align: left;\r\n  width: 300px;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n}\r\n.inputContainer{\r\n  padding: 10px;\r\n}\r\n.title{\r\n  font-size: 2em;\r\n}\r\n.toggleButton{\r\n  position: absolute;\r\n  transform: translate(-55%,-36px);\r\n  background: #d6f;\r\n}\r\n.userNameUnavailable{\r\n  background: #b446!important;\r\n}\r\n.passwordsDoNotMatch{\r\n  background: #b036;\r\n}\r\n.passwordsMatch, .userNameAvailable{\r\n  background: #4b46!important;\r\n}\r\n.disabledButton{\r\n  color: #888;\r\n  background: #333;\r\n}\r\n.invalidLogin{\r\n  color: #f43;\r\n  background: #400;\r\n  padding: 10px;\r\n  width: 290px;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  font-size: 20px;\r\n}\r\n.mustRegister{\r\n  font-size: 26px;\r\n  color: #4f8;\r\n  background: #258;\r\n  padding: 10px;\r\n}\r\nbutton{\r\n  margin: 10px;\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}